{"version":3,"sources":["util.ts","KeyPresser.tsx","images/logo.svg","shapes/Atom.tsx","shapes/Circle.tsx","App.tsx","index.tsx"],"names":["height","document","documentElement","clientHeight","width","clientWidth","KeyPresser","mappings","React","useState","pressedKeys","updatePressedKeys","tabIndex","onKeyDown","e","key","toLowerCase","onKeyUp","s","toUpperCase","JSON","stringify","map","m","i","visible","style","display","component","Atom","src","logo","alt","Circle","backgroundColor","borderRadius","position","RandomPosition","children","updatePosition","useEffect","top","random","left","ConfettiCircle","active","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","colors","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+MAEMA,EAASC,SAASC,gBAAgBC,aAClCC,EAAQH,SAASC,gBAAgBG,Y,OCO1BC,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAC3B,EAAyCC,IAAMC,SAAS,IAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KAUA,OACE,sBAAKC,SAAU,EAAGC,UAT8B,SAACC,GACjDH,EAAkB,2BAAKD,GAAN,kBAAoBI,EAAEC,IAAIC,eAAgB,MAQfC,QANE,SAACH,GDHxB,IAACI,KCIPJ,EAAEC,ODJyBG,EAAEC,eCK5CR,EAAkB,2BAAKD,GAAN,kBAAoBI,EAAEC,KAAM,MAI/C,UACGK,KAAKC,UAAUX,GACfH,EAASe,KAAI,SAACC,EAAGC,GAChB,IAAMC,EAAUf,EAAYa,EAAER,KACxBW,EAAQD,EAAU,GAAK,CAAEE,QAAS,QACxC,OACE,qBAAaD,MAAOA,EAApB,SACE,cAAC,IAAD,UACCH,EAAEK,UAAU,CAACH,eAFND,UC5BL,MAA0B,iCCE5BK,EAAO,WAClB,OAAO,qBAAKC,IAAKC,EAAMC,IAAI,U,iBCoBhBC,EAAS,WACpB,OACE,8BACE,qBACEP,MAAO,CACLQ,gBAAiB,MACjBlC,OAAQ,OACRI,MAAO,OACP+B,aAAc,OACdC,SAAU,iBAOdC,EAAiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SACxB,EAAmC7B,mBAAS,IAA5C,mBAAO2B,EAAP,KAAiBG,EAAjB,KAEA,OADAC,qBAAU,kBAAMD,EJnChB,CACEE,IAAKC,iBAAO,EAAG1C,EAAS,KACxB2C,KAAMD,iBAAO,EAAGtC,EAAQ,SIiCmB,IACtC,qBAAKsB,MAAK,2BAAOU,GAAP,IAAiBA,SAAU,aAArC,SAAoDE,KAGhDM,EAAiB,SAAC,GAA4B,IAA1BnB,EAAyB,EAAzBA,QAa/B,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAUoB,OAAQpB,EAAWqB,OAdF,CAC7BC,MAAO,IACPC,OAAQ,IACRC,cAAe,GACfC,aAAc,GACdC,aAAc,IACdC,SAAU,KACVC,QAAS,EACTjD,MAAO,MACPJ,OAAQ,OACRsD,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAKnD,cAAC,EAAD,QC5CSC,EAZH,WACV,OACE,cAAC,EAAD,CACEhD,SAAU,CACR,CAAEQ,IAAK,IAAKa,UAAWC,GACvB,CAAEd,IAAK,IAAKa,UAAWK,GACvB,CAAElB,IAAK,IAAKa,UAAWgB,OCP/BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAAS0D,eAAe,W","file":"static/js/main.40e4c2cd.chunk.js","sourcesContent":["import { random } from 'lodash'\n\nconst height = document.documentElement.clientHeight\nconst width = document.documentElement.clientWidth\n\nexport const randomPos = () => (\n  {\n    top: random(0, height - 100),\n    left: random(0, width - 100)\n  }\n)\n\n\nexport const isUpperCase = (s: String) => s === s.toUpperCase()\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport { isUpperCase } from \"./util\";\n\n\nexport type IsVisible = {visible?: boolean}\ntype Mapping = { key: string; component: (props: IsVisible) => JSX.Element };\ntype Props = {\n  mappings: Mapping[];\n};\nexport const KeyPresser = ({ mappings }: Props) => {\n  const [pressedKeys, updatePressedKeys] = React.useState({});\n\n  const handleKeyDown: React.KeyboardEventHandler = (e) => {\n    updatePressedKeys({ ...pressedKeys, [e.key.toLowerCase()]: true });\n  };\n  const handleKeyUp: React.KeyboardEventHandler = (e) => {\n    if (!isUpperCase(e.key)) {\n      updatePressedKeys({ ...pressedKeys, [e.key]: false });\n    }\n  };\n  return (\n    <div tabIndex={1} onKeyDown={handleKeyDown} onKeyUp={handleKeyUp}>\n      {JSON.stringify(pressedKeys)}\n      {mappings.map((m, i) => {\n        const visible = pressedKeys[m.key]\n        const style = visible ? {} : { display: \"none\" };\n        return (\n          <div key={i} style={style}>\n            <Draggable>\n            {m.component({visible})}\n            </Draggable>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../images/logo.svg\";\n\nexport const Atom = () => {\n  return <img src={logo} alt='logo' />;\n};","import React, { useEffect, useState } from \"react\";\nimport { IsVisible } from \"../KeyPresser\";\nimport { randomPos } from \"../util\";\nimport Confetti, { ConfettiConfig } from \"react-dom-confetti\";\n/*\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n */\n\nexport const Circle = () => {\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor: \"red\",\n          height: \"50px\",\n          width: \"50px\",\n          borderRadius: \"25px\",\n          position: \"absolute\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nconst RandomPosition = ({ children }: React.PropsWithChildren<{}>) => {\n  const [position, updatePosition] = useState({});\n  useEffect(() => updatePosition(randomPos()), []);\n  return <div style={{ ...position, position: \"absolute\" }}>{children}</div>;\n};\n\nexport const ConfettiCircle = ({ visible }: IsVisible) => {\n  const config: ConfettiConfig = {\n    angle: 191,\n    spread: 360,\n    startVelocity: 64,\n    elementCount: 70,\n    dragFriction: 0.12,\n    duration: 2070,\n    stagger: 3,\n    width: \"9px\",\n    height: \"10px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\n  };\n  return (\n    <RandomPosition>\n      <Confetti active={visible!!} config={config} />\n      <Circle />\n    </RandomPosition>\n  );\n};\n","import { KeyPresser } from \"./KeyPresser\";\nimport { Atom } from \"./shapes/Atom\";\nimport { Circle, ConfettiCircle } from \"./shapes/Circle\";\n\n\nconst App = () => {\n  return (\n    <KeyPresser\n      mappings={[\n        { key: \"a\", component: Atom },\n        { key: \"b\", component: Circle },\n        { key: \"c\", component: ConfettiCircle },\n      ]}\n    />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}